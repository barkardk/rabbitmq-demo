name: Release
on:
  push:
    tags:
      - v*.*.*
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
  release:
    name: Release
    defaults:
      run:
        working-directory: ./rabbitmq
    strategy:
      matrix:
        go-version: [ 1.16 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    needs: setup
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2
      - run: |
          export VERSION=$((git describe --tags --dirty --match='v*' 2>/dev/null || echo v0.0.0) | cut -c2- )
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "TAG=${VERSION}" >> $GITHUB_ENV

      - uses: actions/cache@v2
        env:
          cache-name: golang
        with:
          path: /go/pkg/mod
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Setup QUEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build docker container
        run: |
          echo "${{ secrets.token }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          make -j3 release

      - name: Create GH release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            # Changelog

            ## Features :new:

            ## Fixed issues :zap:

            ## Improvements :+1:


